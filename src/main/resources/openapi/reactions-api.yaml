openapi: "3.0.0"
info:
  title: Reaction API
  description: Reaction API written in google cloud rest api codestyle
  version: 0.0.1
servers:
  - url: http://localhost:8080/api/v0
    description: Local server
paths:
  /users/{id}/reactions:send:
    parameters:
      - name: id
        in: path
        description: The unique identifier of the sender
        required: true
        schema:
          type: string
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
    post:
      tags:
        - reaction
      summary: Send a reaction
      operationId: sendReaction
      requestBody:
        description: The reaction to send
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendingReaction'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reaction'

  /users/{id}/reactions:
    parameters:
      - name: id
        in: path
        description: The unique identifier of the recipient
        required: true
        schema:
          type: string
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
    get:
      tags:
        - reaction
      summary: Get all reactions
      operationId: getReactions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReceivedReactions'

  /users/{id}/reactions/{reaction_id}:reply:
    parameters:
      - name: id
        in: path
        description: The unique identifier of the recipient
        required: true
        schema:
          type: string
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
      - name: reaction_id
        in: path
        description: The unique identifier of the reaction
        required: true
        schema:
          type: string
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
    patch:
      tags:
        - reaction
      summary: Reply to a reaction
      operationId: replyToReaction
      requestBody:
        description: The reaction to reply
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Me too!"
      responses:
        '200':
          description: OK

  /users/{id}/reactions/{reaction_id}:skip:
    parameters:
      - name: id
        in: path
        description: The unique identifier of the recipient
        required: true
        schema:
          type: string
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
      - name: reaction_id
        in: path
        description: The unique identifier of the reaction
        required: true
        schema:
          type: string
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
    patch:
      tags:
        - reaction
      summary: Skip a reaction
      operationId: skipReaction
      responses:
        '200':
          description: OK

components:
  schemas:
    SendingReaction:
      type: object
      properties:
        recepient_id:
          type: string
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
        comment:
          type: string
          example: "I like this"
        prompt_id:
          type: string
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000

    Reaction:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
        sender_id:
          type: string
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
        recipient_id:
          type: string
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
        comment:
          type: string
          example: "I like this"
        prompt_id:
          type: string
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
        sent_at:
          type: string
          format: date-time
          example: "2021-07-01T00:00:00Z"
        state:
          type: string
          description: The state of the reaction. ACTIVE - the reaction is active and waiting for response, SKIPPED - the reaction was skipped by recipient, REPLIED - the reaction is replied by recipient
          enum:
            - ACTIVE
            - SKIPPED
            - REPLIED

    ReactionSender:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
        first_name:
          type: string
          example: "John"
        second_name:
          type: string
          example: "Doe"
        avatar_link:
          type: string
          example: "https://example.com/avatar.jpg"

    ReceivedReaction:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
        sender:
          $ref: '#/components/schemas/ReactionSender'
        comment:
          type: string
          example: "I like this"
        prompt_id:
          type: string
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
        sent_at:
          type: string
          format: date-time
          example: "2021-07-01T00:00:00Z"
        state:
          type: string
          description: The state of the reaction. ACTIVE - the reaction is active and waiting for response, SKIPPED - the reaction was skipped by recipient, REPLIED - the reaction is replied by recipient
          enum:
            - ACTIVE
            - SKIPPED
            - REPLIED

    ReceivedReactions:
      type: array
      items:
        $ref: '#/components/schemas/ReceivedReaction'